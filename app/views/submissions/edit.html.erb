<%= javascript_include_tag 'recorderWorker.js.erb' %>
<%= javascript_include_tag 'recorder.js.erb' %>
<div id="arrow">
  <%= link_to "<- Cancel", submissions_path%>
</div>
<div id="title_container">
  <h1> Add Recording </h1>
</div>

<head>
  <%= yield :head %>
</head>

<script>
  var onFail = function(e) {
	console.log('Rejected!', e);
  };

  var onSuccess = function(s) {
	var context = new webkitAudioContext();
	var mediaStreamSource = context.createMediaStreamSource(s);
	recorder = new Recorder(mediaStreamSource);
	recorder.record();

	// audio loopback
	// mediaStreamSource.connect(context.destination);
  }

  window.URL = window.URL || window.webkitURL;
  navigator.getUserMedia  = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;

  var recorder;
  var audio = document.querySelector('audio');

  function startRecording() {
	if (navigator.getUserMedia) {
	  navigator.webkitGetUserMedia({audio: true}, onSuccess, onFail);
	} else {
	  console.log('navigator.getUserMedia not present');
	}
  }

  function stopRecording() {
	recorder.stop();
	recorder.exportWAV(function(s) {
	  audio.src = window.URL.createObjectURL(s);
    sendWaveToPost(s);

	});
}

  function sendWaveToPost(blob) {
            alert('in');
        var data = new FormData();

            data.append("audio", blob, (new Date()).getTime() + ".wav");

            var oReq = new XMLHttpRequest();
            oReq.open("PATCH", "/submissions/save_file");
            oReq.send(data);
            oReq.onload = function(oEvent) {
                if (oReq.status == 200) {
                    console.log("Uploaded");
                } else {
                    console.log("Error " + oReq.status + " occurred uploading your file.");
                }
            };
        }
</script>


<div id="content_container">
<%= form_for :submission, url: submission_path(@submission), method: :patch do |f| %>
  <% if @submission.errors.any? %>
  <div id="error_explanation">
    <h2><%= pluralize(@submission.errors.count, "error") %> prohibited
      this submission from being saved:</h2>
    <ul>
    <% @submission.errors.full_messages.each do |msg| %>
      <li><%= msg %></li>
    <% end %>
    </ul>
  </div>
  <% end %>
  <div id="text">
    <h3> Text </h3>
    <p>
      <%= simple_format(@submission.text)%>
    </p>

  </div>
  <div id="audio_upload_container">
    <p>
      <%= f.label "Username" %>
      <%= f.text_field :audiouser %>
    </p>
      <h3> Upload Recording or Record Audio </h3>
      <div id="upload_rec"> 
        <%= f.label "Upload Recording" %>
        <%= f.file_field :recording , id: "save"%>
      </div>

  <audio controls autoplay></audio>
  <div id="button_container">
  <input onclick="startRecording()" type="button" value="start recording" />
  <input onclick="stopRecording()" type="button" value="stop recording and play" />
  </div>

  <p>
    <%= f.submit "Save Recording to Database" %> 
  </p>
  </div>


<% end %>
</div>